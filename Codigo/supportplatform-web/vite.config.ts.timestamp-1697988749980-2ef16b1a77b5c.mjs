// vite.config.ts
import react from "file:///C:/Users/guilh/Desktop/OsTrem/Facul/TCC/repo/plf-es-2023-1-tcci-0393100-dev-plataformaapoioavaliacoesprojetos/Codigo/supportplatform-web/node_modules/@vitejs/plugin-react/dist/index.mjs";
import path from "path";
import { defineConfig, loadEnv } from "file:///C:/Users/guilh/Desktop/OsTrem/Facul/TCC/repo/plf-es-2023-1-tcci-0393100-dev-plataformaapoioavaliacoesprojetos/Codigo/supportplatform-web/node_modules/vite/dist/node/index.js";
import checker from "file:///C:/Users/guilh/Desktop/OsTrem/Facul/TCC/repo/plf-es-2023-1-tcci-0393100-dev-plataformaapoioavaliacoesprojetos/Codigo/supportplatform-web/node_modules/vite-plugin-checker/dist/esm/main.js";
var vite_config_default = defineConfig(({ mode }) => {
  const envDir = path.resolve(process.cwd(), "env");
  const loadedEnv = loadEnv(mode, envDir, "");
  process.env = Object.assign(process.env, loadedEnv);
  const PORT = process.env.PORT;
  const port = Number(PORT) || 3e3;
  const HOST = process.env.SUPPORTPLATFORM_WEB_HOST;
  const host = HOST || "0.0.0.0";
  return {
    plugins: [
      react(),
      checker({
        typescript: {
          tsconfigPath: "./tsconfig.json"
        },
        eslint: {
          lintCommand: "eslint . --ext ts,tsx"
        }
      })
    ],
    envDir: "./env",
    server: {
      port,
      host
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxndWlsaFxcXFxEZXNrdG9wXFxcXE9zVHJlbVxcXFxGYWN1bFxcXFxUQ0NcXFxccmVwb1xcXFxwbGYtZXMtMjAyMy0xLXRjY2ktMDM5MzEwMC1kZXYtcGxhdGFmb3JtYWFwb2lvYXZhbGlhY29lc3Byb2pldG9zXFxcXENvZGlnb1xcXFxzdXBwb3J0cGxhdGZvcm0td2ViXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxndWlsaFxcXFxEZXNrdG9wXFxcXE9zVHJlbVxcXFxGYWN1bFxcXFxUQ0NcXFxccmVwb1xcXFxwbGYtZXMtMjAyMy0xLXRjY2ktMDM5MzEwMC1kZXYtcGxhdGFmb3JtYWFwb2lvYXZhbGlhY29lc3Byb2pldG9zXFxcXENvZGlnb1xcXFxzdXBwb3J0cGxhdGZvcm0td2ViXFxcXHZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9DOi9Vc2Vycy9ndWlsaC9EZXNrdG9wL09zVHJlbS9GYWN1bC9UQ0MvcmVwby9wbGYtZXMtMjAyMy0xLXRjY2ktMDM5MzEwMC1kZXYtcGxhdGFmb3JtYWFwb2lvYXZhbGlhY29lc3Byb2pldG9zL0NvZGlnby9zdXBwb3J0cGxhdGZvcm0td2ViL3ZpdGUuY29uZmlnLnRzXCI7LyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCByZWFjdCBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3RcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBkZWZpbmVDb25maWcsIGxvYWRFbnYgfSBmcm9tIFwidml0ZVwiO1xuaW1wb3J0IGNoZWNrZXIgZnJvbSBcInZpdGUtcGx1Z2luLWNoZWNrZXJcIjtcblxuLy8gaHR0cHM6Ly92aXRlanMuZGV2L2NvbmZpZy9cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZygoeyBtb2RlIH0pID0+IHtcbiAgICBjb25zdCBlbnZEaXIgPSBwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgXCJlbnZcIik7XG4gICAgY29uc3QgbG9hZGVkRW52ID0gbG9hZEVudihtb2RlLCBlbnZEaXIsIFwiXCIpIGFzIFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG4gICAgcHJvY2Vzcy5lbnYgPSBPYmplY3QuYXNzaWduKHByb2Nlc3MuZW52LCBsb2FkZWRFbnYpO1xuICAgIGNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIGFzIHN0cmluZztcbiAgICBjb25zdCBwb3J0ID0gTnVtYmVyKFBPUlQpIHx8IDMwMDA7XG4gICAgY29uc3QgSE9TVCA9IHByb2Nlc3MuZW52LlNVUFBPUlRQTEFURk9STV9XRUJfSE9TVCBhcyBzdHJpbmc7XG4gICAgY29uc3QgaG9zdCA9IEhPU1QgfHwgXCIwLjAuMC4wXCI7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBwbHVnaW5zOiBbXG4gICAgICAgICAgICByZWFjdCgpLFxuICAgICAgICAgICAgY2hlY2tlcih7XG4gICAgICAgICAgICAgICAgdHlwZXNjcmlwdDoge1xuICAgICAgICAgICAgICAgICAgICB0c2NvbmZpZ1BhdGg6IFwiLi90c2NvbmZpZy5qc29uXCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlc2xpbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgbGludENvbW1hbmQ6IFwiZXNsaW50IC4gLS1leHQgdHMsdHN4XCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBdLFxuICAgICAgICBlbnZEaXI6IFwiLi9lbnZcIixcbiAgICAgICAgc2VydmVyOiB7XG4gICAgICAgICAgICBwb3J0LFxuICAgICAgICAgICAgaG9zdCxcbiAgICAgICAgfSxcbiAgICB9O1xufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsT0FBTyxXQUFXO0FBQ2xCLE9BQU8sVUFBVTtBQUNqQixTQUFTLGNBQWMsZUFBZTtBQUN0QyxPQUFPLGFBQWE7QUFHcEIsSUFBTyxzQkFBUSxhQUFhLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDdEMsUUFBTSxTQUFTLEtBQUssUUFBUSxRQUFRLElBQUksR0FBRyxLQUFLO0FBQ2hELFFBQU0sWUFBWSxRQUFRLE1BQU0sUUFBUSxFQUFFO0FBQzFDLFVBQVEsTUFBTSxPQUFPLE9BQU8sUUFBUSxLQUFLLFNBQVM7QUFDbEQsUUFBTSxPQUFPLFFBQVEsSUFBSTtBQUN6QixRQUFNLE9BQU8sT0FBTyxJQUFJLEtBQUs7QUFDN0IsUUFBTSxPQUFPLFFBQVEsSUFBSTtBQUN6QixRQUFNLE9BQU8sUUFBUTtBQUVyQixTQUFPO0FBQUEsSUFDSCxTQUFTO0FBQUEsTUFDTCxNQUFNO0FBQUEsTUFDTixRQUFRO0FBQUEsUUFDSixZQUFZO0FBQUEsVUFDUixjQUFjO0FBQUEsUUFDbEI7QUFBQSxRQUNBLFFBQVE7QUFBQSxVQUNKLGFBQWE7QUFBQSxRQUNqQjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0w7QUFBQSxJQUNBLFFBQVE7QUFBQSxJQUNSLFFBQVE7QUFBQSxNQUNKO0FBQUEsTUFDQTtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQ0osQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
