{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"GetAllBranchQueryDTO": {
				"properties": {
					"page": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"limit": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Record_string._message-string--value-any_-or-undefined_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ErrorResponseDTO": {
				"properties": {
					"message": {
						"type": "string"
					},
					"error": {
						"$ref": "#/components/schemas/Record_string._message-string--value-any_-or-undefined_"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllContributorQueryDTO": {
				"properties": {
					"page": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"limit": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvaluationMethodResponseDTO": {
				"description": "EvaluationMethodResponseDTO - Could be used to structure the response object when sending EvaluationMethods to the client.",
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"semester": {
						"type": "number",
						"format": "double"
					},
					"year": {
						"type": "number",
						"format": "double"
					},
					"disabledAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"id",
					"description",
					"semester",
					"year"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvaluationMethodCreateDTO": {
				"description": "EvaluationMethodCreateDTO - Used for creating a new EvaluationMethod.",
				"properties": {
					"description": {
						"type": "string",
						"minLength": 1,
						"maxLength": 255
					},
					"semester": {
						"type": "integer",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"description",
					"semester",
					"year"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvaluationMethodUpdateDTO": {
				"description": "EvaluationMethodUpdateDTO - Used for updating an existing EvaluationMethod.",
				"properties": {
					"description": {
						"type": "string",
						"minLength": 1,
						"maxLength": 255
					},
					"semester": {
						"type": "integer",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"format": "int32"
					},
					"disabledAt": {
						"type": "string",
						"format": "date",
						"nullable": true
					}
				},
				"required": [
					"description",
					"semester",
					"year",
					"disabledAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginationResponseDTO_EvaluationMethodResponseDTO_": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/EvaluationMethodResponseDTO"
						},
						"type": "array"
					},
					"totalPages": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"results",
					"totalPages"
				],
				"type": "object"
			},
			"EvaluationMethodSearchDTO": {
				"description": "EvaluationMethodSearchDTO - Used for searching through EvaluationMethods with pagination and filters.",
				"properties": {
					"page": {
						"type": "integer",
						"format": "int32",
						"default": "1",
						"minimum": 1
					},
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": "10",
						"minimum": 1
					},
					"description": {
						"type": "string"
					},
					"semester": {
						"type": "integer",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"format": "int32"
					},
					"disabledAt": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"forceDisabled": {
						"type": "boolean",
						"default": "false"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RepositoryResponseDTO": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"evaluationMethod": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EvaluationMethodResponseDTO"
							}
						],
						"nullable": true
					},
					"githubId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"stargazerCount": {
						"type": "number",
						"format": "double"
					},
					"forkCount": {
						"type": "number",
						"format": "double"
					},
					"githubCreatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"githubUpdatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"hasProjectsEnabled": {
						"type": "boolean"
					},
					"hasIssuesEnabled": {
						"type": "boolean"
					},
					"primaryLanguage": {
						"type": "string",
						"nullable": true
					},
					"licenseName": {
						"type": "string",
						"nullable": true
					},
					"defaultBranch": {
						"type": "string",
						"nullable": true
					},
					"automaticSynchronization": {
						"type": "boolean"
					},
					"synchronizing": {
						"type": "boolean"
					},
					"lastSyncAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"id",
					"githubId",
					"name",
					"description",
					"stargazerCount",
					"forkCount",
					"githubCreatedAt",
					"githubUpdatedAt",
					"hasProjectsEnabled",
					"hasIssuesEnabled",
					"primaryLanguage",
					"licenseName",
					"defaultBranch",
					"automaticSynchronization",
					"synchronizing",
					"lastSyncAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginationResponseDTO_RepositoryResponseDTO_": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/RepositoryResponseDTO"
						},
						"type": "array"
					},
					"totalPages": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"results",
					"totalPages"
				],
				"type": "object"
			},
			"GetAllRepositoryQueryDTO": {
				"properties": {
					"page": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"limit": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"filter": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RepositoryPatchDTO": {
				"description": "RepositoryPatchDTO - Used for updating a Repository.",
				"properties": {
					"evaluationMethodId": {
						"type": "integer",
						"format": "int32",
						"nullable": true,
						"minimum": 1
					},
					"automaticSynchronization": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CommitMetricsDTO": {
				"properties": {
					"totalCommitCount": {
						"type": "number",
						"format": "double"
					},
					"commitsPerContributor": {
						"items": {
							"properties": {
								"commtiPercentage": {
									"type": "number",
									"format": "double"
								},
								"commitCount": {
									"type": "number",
									"format": "double"
								},
								"contribuitor": {
									"properties": {
										"githubAvatarUrl": {
											"type": "string"
										},
										"githubLogin": {
											"type": "string"
										},
										"githubName": {
											"type": "string"
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"githubAvatarUrl",
										"githubLogin",
										"githubName",
										"id"
									],
									"type": "object"
								}
							},
							"required": [
								"commtiPercentage",
								"commitCount"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"totalCommitCount",
					"commitsPerContributor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RepositoryMetricQueryDTO": {
				"properties": {
					"startedAt": {
						"type": "string",
						"format": "date"
					},
					"endedAt": {
						"type": "string",
						"format": "date"
					},
					"branchName": {
						"type": "string"
					},
					"contributor": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"filterWithNoContributor": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IssueMetricQueryDTO": {
				"properties": {
					"startedAt": {
						"type": "string",
						"format": "date"
					},
					"endedAt": {
						"type": "string",
						"format": "date"
					},
					"contributor": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CommitQualityMetricsDTO": {
				"properties": {
					"generalCommitQualityLevel": {
						"items": {
							"properties": {
								"qualityLevelCount": {
									"type": "number",
									"format": "double"
								},
								"qualityLevel": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"qualityLevelCount",
								"qualityLevel"
							],
							"type": "object"
						},
						"type": "array"
					},
					"commitQualityPerContributor": {
						"items": {
							"properties": {
								"commitQualityLevel": {
									"items": {
										"properties": {
											"qualityLevelCount": {
												"type": "number",
												"format": "double"
											},
											"qualityLevel": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"qualityLevelCount",
											"qualityLevel"
										],
										"type": "object"
									},
									"type": "array"
								},
								"contributor": {
									"properties": {
										"githubAvatarUrl": {
											"type": "string"
										},
										"githubLogin": {
											"type": "string"
										},
										"githubName": {
											"type": "string"
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"githubAvatarUrl",
										"githubLogin",
										"githubName",
										"id"
									],
									"type": "object"
								}
							},
							"required": [
								"commitQualityLevel",
								"contributor"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"generalCommitQualityLevel",
					"commitQualityPerContributor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SprintResponseDTO": {
				"description": "SprintResponseDTO - Could be used to structure the response object when sending Sprints to the client.",
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"start_date": {
						"type": "string",
						"format": "date-time"
					},
					"end_date": {
						"type": "string",
						"format": "date-time"
					},
					"evaluationMethodId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"start_date",
					"end_date",
					"evaluationMethodId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SprintCreateDTO": {
				"description": "SprintCreateDTO - Used for creating a new Sprint.",
				"properties": {
					"name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 255
					},
					"start_date": {
						"type": "string",
						"format": "date"
					},
					"end_date": {
						"type": "string",
						"format": "date"
					},
					"evaluationMethodId": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"name",
					"start_date",
					"end_date",
					"evaluationMethodId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SprintUpdateDTO": {
				"description": "SprintUpdateDTO - Used for updating an existing Sprint.",
				"properties": {
					"name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 255
					},
					"start_date": {
						"type": "string",
						"format": "date"
					},
					"end_date": {
						"type": "string",
						"format": "date"
					},
					"evaluationMethodId": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"name",
					"start_date",
					"end_date",
					"evaluationMethodId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginationResponseDTO_SprintResponseDTO_": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/SprintResponseDTO"
						},
						"type": "array"
					},
					"totalPages": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"results",
					"totalPages"
				],
				"type": "object"
			},
			"SprintSearchDTO": {
				"description": "SprintSearchDTO - Used for searching through Sprints with pagination and filters.",
				"properties": {
					"page": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"limit": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 255
					},
					"start_date": {
						"type": "string",
						"format": "date"
					},
					"end_date": {
						"type": "string",
						"format": "date"
					},
					"evaluationMethodId": {
						"type": "integer",
						"format": "int32"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"bearer": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "supportplatform-service",
		"version": "1.0.0",
		"description": "SupportPlatform service for GitHub Project Evaluation Support Platform",
		"license": {
			"name": "CC-BY-4.0"
		},
		"contact": {
			"name": "Lucas Ângelo Oliveira Martins Rocha ",
			"url": "https://lucasangelo.com/"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/repository/{repositoryId}/branch": {
			"get": {
				"operationId": "GetByRepositoryId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"branch"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					}
				]
			}
		},
		"/repository/{repositoryId}/contributor": {
			"get": {
				"operationId": "FindbyRepositoryId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"contributor"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					}
				]
			}
		},
		"/evaluation-method": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "EvaluationMethod created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EvaluationMethodResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"description": "First evaluation method",
											"semester": 2,
											"year": 2023,
											"disabledAt": null
										}
									}
								}
							}
						}
					}
				},
				"description": "Create a new EvaluationMethod.",
				"tags": [
					"evaluation-method"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EvaluationMethodCreateDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Found evaluation methods",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginationResponseDTO_EvaluationMethodResponseDTO_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"totalPages": 1,
											"results": [
												{
													"id": 1,
													"description": "First evaluation method",
													"semester": 2,
													"year": 2023,
													"disabledAt": "2023-09-01T00:00:00.000Z"
												},
												{
													"id": 2,
													"description": "Second evaluation method",
													"semester": 2,
													"year": 2023,
													"disabledAt": null
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all EvaluationMethods with pagination and filter.\nCan filter by description, semester, year and disabledAt.",
				"tags": [
					"evaluation-method"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": "1",
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": "10",
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "description",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "semester",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "disabledAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "forceDisabled",
						"required": false,
						"schema": {
							"default": "false",
							"type": "boolean"
						}
					}
				]
			}
		},
		"/evaluation-method/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "EvaluationMethod updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EvaluationMethodResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"description": "First evaluation method",
											"semester": 2,
											"year": 2023,
											"disabledAt": "2023-09-01T00:00:00.000Z"
										}
									}
								}
							}
						}
					}
				},
				"description": "Update an existing EvaluationMethod by id.\nNeed body with all fields.",
				"tags": [
					"evaluation-method"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EvaluationMethodUpdateDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Found evaluation method",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EvaluationMethodResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"description": "First evaluation method",
											"semester": 2,
											"year": 2023,
											"disabledAt": "2023-09-01T00:00:00.000Z"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get an existing EvaluationMethod by id.",
				"tags": [
					"evaluation-method"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "EvaluationMethod deleted"
					}
				},
				"description": "Delete an existing EvaluationMethod by id.",
				"tags": [
					"evaluation-method"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/repository": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Found repositories",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginationResponseDTO_RepositoryResponseDTO_"
								}
							}
						}
					}
				},
				"tags": [
					"repository"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/repository/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RepositoryResponseDTO"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"repository"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					}
				]
			},
			"patch": {
				"operationId": "Patch",
				"responses": {
					"200": {
						"description": "Updated evaluation method",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RepositoryResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"evaluationMethod": {
												"id": 1,
												"description": "First evaluation method description",
												"semester": 1,
												"year": 2023,
												"disabledAt": null
											},
											"githubId": "123456",
											"name": "First repository",
											"description": "First repository description",
											"stargazerCount": 0,
											"forkCount": 0,
											"githubCreatedAt": "2023-09-01T00:00:00.000Z",
											"githubUpdatedAt": "2023-09-01T00:00:00.000Z",
											"hasProjectsEnabled": false,
											"hasIssuesEnabled": false,
											"primaryLanguage": "JavaScript",
											"licenseName": "MIT",
											"defaultBranch": "main",
											"automaticSynchronization": true,
											"synchronizing": false,
											"lastSyncAt": "2023-09-01T00:00:00.000Z"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"repository"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RepositoryPatchDTO"
							}
						}
					}
				}
			}
		},
		"/repository/{repositoryId}/metric/commit": {
			"get": {
				"operationId": "GetCommitMetrics",
				"responses": {
					"200": {
						"description": "Commit metrics",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitMetricsDTO"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"metrics"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "startedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "branchName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contributor",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "filterWithNoContributor",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/repository/{repositoryId}/metric/changes": {
			"get": {
				"operationId": "GetChangesMetrics",
				"responses": {
					"200": {
						"description": "File change metrics",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"metrics"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "startedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "branchName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contributor",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "filterWithNoContributor",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/repository/{repositoryId}/metric/file-types": {
			"get": {
				"operationId": "GetFileTypesMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"metrics"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "startedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "branchName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contributor",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "filterWithNoContributor",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/repository/{repositoryId}/metric/issues": {
			"get": {
				"operationId": "GetIssuesMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"metrics"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "startedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contributor",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			}
		},
		"/repository/{repositoryId}/metric/commit-quality": {
			"get": {
				"operationId": "GetCommitQualityMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitQualityMetricsDTO"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"metrics"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "repositoryId",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "startedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endedAt",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "branchName",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contributor",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "filterWithNoContributor",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/sprint": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Sprint created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SprintResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"name": "Sprint 1",
											"start_date": "2023-01-01T00:00:00.000Z",
											"end_date": "2023-01-15T00:00:00.000Z",
											"evaluationMethodId": 1
										}
									}
								}
							}
						}
					}
				},
				"description": "Create a new Sprint.",
				"tags": [
					"sprint"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SprintCreateDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Found sprints",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginationResponseDTO_SprintResponseDTO_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"totalPages": 1,
											"results": [
												{
													"id": 1,
													"name": "Sprint 1",
													"start_date": "2023-01-01T00:00:00.000Z",
													"end_date": "2023-01-15T00:00:00.000Z",
													"evaluationMethodId": 1
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all Sprints with pagination and filter.\nCan filter by start_date, end_date, and evaluationMethodId.",
				"tags": [
					"sprint"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string",
							"minLength": 1,
							"maxLength": 255
						}
					},
					{
						"in": "query",
						"name": "start_date",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "end_date",
						"required": false,
						"schema": {
							"format": "date",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "evaluationMethodId",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					}
				]
			}
		},
		"/sprint/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Sprint updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SprintResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"name": "Sprint 1",
											"start_date": "2023-01-01T00:00:00.000Z",
											"end_date": "2023-01-15T00:00:00.000Z",
											"evaluationMethodId": 1
										}
									}
								}
							}
						}
					}
				},
				"description": "Update an existing Sprint by id.\nNeed body with all fields.",
				"tags": [
					"sprint"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SprintUpdateDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Found sprint",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SprintResponseDTO"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 1,
											"name": "Sprint 1",
											"start_date": "2023-01-01T00:00:00.000Z",
											"end_date": "2023-01-15T00:00:00.000Z",
											"evaluationMethodId": 1
										}
									}
								}
							}
						}
					}
				},
				"description": "Get an existing Sprint by id.",
				"tags": [
					"sprint"
				],
				"security": [
					{
						"bearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}